@charset "utf-8"; // foreign characters ahead (in KSS markup)

// Copyright 2015 Palantir Technologies, Inc. All rights reserved.
// Licensed under the terms of the LICENSE file distributed with this project.

@import "common/variables";
@import "common/mixins";
@import "~@blueprintjs/icons/src/icons";

// consistent cross-browser text selection
::selection {
  background: $pt-text-selection-color;
}

body {
  @include base-typography();
  color: $pt-text-color;
}

small {
  font-size: $pt-font-size-small;
}

/*
Headings

Markup:
<h1 class="pt-heading">H1 heading</h1>
<h2 class="pt-heading">H2 heading</h2>
<h3 class="pt-heading">H3 heading</h3>
<h4 class="pt-heading">H4 heading</h4>
<h5 class="pt-heading">H5 heading</h5>
<h6 class="pt-heading">H6 heading</h6>

Styleguide headings
*/

.pt-heading {
  @include heading-typography();
  margin: 0 0 $pt-grid-size;
  padding: 0;
}

// tag: (font-size, line-height)
$headings: (
  "h1": (36px, 40px),
  "h2": (28px, 32px),
  "h3": (22px, 25px),
  "h4": (18px, 21px),
  "h5": (16px, 19px),
  "h6": (14px, 16px)
);

@each $tag, $props in $headings {
  %#{$tag} {
    line-height: nth($props, 2);
    font-size: nth($props, 1);
  }

  #{$tag}.pt-heading {
    @extend %#{$tag};
  }
}

/*
UI text

Markup:
<div class="{{.modifier}}">
  Blueprint components react overlay date picker. Breadcrumbs dialog progress non-ideal state.
</div>

.pt-ui-text - Default Blueprint font styles, applied to the `<body>` tag and available as a class for nested resets.
.pt-monospace-text - Use a monospace font (ideal for code).
.pt-running-text - Increase line height ideal for longform text. See [Running text](#core/typography.running-text) below for additional features.
.pt-text-large - Use a larger font size.
.pt-text-muted - Change text color to a gentler gray.
.pt-text-overflow-ellipsis - Truncate a single line of text with an ellipsis if it overflows its
  container.

Styleguide pt-ui-text
*/

.pt-ui-text {
  @include base-typography();
}

.pt-monospace-text {
  @include monospace-typography();
}

// NOTE: .pt-text-large defined below after .pt-running-text

.pt-text-muted {
  color: $pt-text-color-muted;

  .pt-dark & {
    color: $pt-dark-text-color-muted;
  }
}

.pt-text-overflow-ellipsis {
  @include overflow-ellipsis();
}

/*
Running text

Markup:
<div class="{{.modifier}}">
  <p>Longform text, such as rendered Markdown documents, benefit from additional spacing and slightly
large font size. Apply <code>.pt-running-text</code> to the parent element to adjust spacing for the following
elements:</p>
  <ul>
    <li><code>&lt;p></code> tags have increased line-height and font size.</li>
    <li><code>&lt;h*></code> tag margins are adjusted to provide clear separation between sections in a document.</li>
    <li><code>&lt;ul></code> and <code>&lt;ol></code> tags receive [`.pt-list`](#typography.lists) styles for legibility.</li>
  </ul>
  <h3>New section</h3>
  <p>And another paragraph.</p>
</div>

.pt-text-large - Use larger font size.

Styleguide pt-running-text
*/

.pt-running-text {
  @include running-typography();

  @each $tag, $props in $headings {
    #{$tag} {
      @extend %#{$tag};
      @include heading-typography();
      margin-top: $pt-grid-size * 4;
      margin-bottom: $pt-grid-size * 2;
    }
  }

  hr {
    margin: ($pt-grid-size * 2) 0;
    border: none;
    border-bottom: 1px solid $pt-divider-black;

    .pt-dark & {
      border-color: $pt-dark-divider-white;
    }
  }

  p {
    margin: 0 0 $pt-grid-size;
    padding: 0;
  }

  blockquote {
    @extend %blockquote;
  }

  code {
    @extend %code;
  }

  pre {
    @extend %code-block;
  }

  ul,
  ol {
    @extend %list;
    }
  }

// NOTE: this must be defined after .pt-running-text in order to override font-size.
.pt-text-large {
  font-size: $pt-font-size-large;
}

/*
Links

Simply use an `<a href="">` tag as you normally would. No class is necessary for Blueprint styles.
Links are underlined only when hovered.

Putting an icon inside a link will cause it to inherit the link's text color.

Styleguide typography.links
*/

a {
  text-decoration: none;
  color: $pt-link-color;

  &:hover {
    cursor: pointer;
    text-decoration: underline;
    color: $pt-link-color;
  }

  #{$icon-classes} {
    color: inherit;
  }

  code,
  .pt-dark & code {
    color: inherit;
  }

  .pt-dark &,
  .pt-dark &:hover {
    color: $pt-dark-link-color;

    #{$icon-classes} {
      color: inherit;
    }
  }
}

/*
Preformatted text

Markup:
<p>
  The <code class="pt-code">Portal</code> component functions like a declarative
  <code class="pt-code">appendChild()</code>, or jQuery's <code class="pt-code">$.fn.appendTo()</code>.
</p>
<div class="pt-running-text">
  <pre>The children of a <code>Portal</code> component are appended to the <code>&lt;body></code> element.</pre>
</div>
<pre class="pt-code-block"><code>// code sample
export function hasModifier(modifiers: ts.ModifiersArray, ...modifierKinds: ts.SyntaxKind[]) {
  if (modifiers == null || modifierKinds == null) {
    return false;
  }
  return modifiers.some((m) => {
    return modifierKinds.some((k) => m.kind === k);
  });
}</code></pre>

Styleguide preformatted
*/

%code {
  @include monospace-typography();

  border-radius: $pt-border-radius;
  box-shadow: inset border-shadow(0.2);
  background: $pt-code-background-color;
  padding: 2px 5px;
  color: $pt-code-text-color;

  .pt-dark & {
    box-shadow: inset border-shadow(0.4);
    background: $pt-dark-code-background-color;
    color: $pt-dark-code-text-color;
  }
}

%code-block {
  @include monospace-typography();

  display: block;
  margin: $pt-grid-size 0;
  border-radius: $pt-border-radius;
  box-shadow: inset 0 0 0 1px $pt-divider-black;
  background: $pt-code-background-color;
  padding: ($pt-grid-size * 1.3) ($pt-grid-size * 1.5) ($pt-grid-size * 1.2);
  line-height: 1.4;
  color: $pt-text-color;
  font-size: $pt-font-size - 1px;
  word-break: break-all;
  word-wrap: break-word;

  .pt-dark & {
    box-shadow: inset 0 0 0 1px $pt-dark-divider-black;
    background: $pt-dark-code-background-color;
    color: $pt-dark-text-color;
  }

  > code {
    box-shadow: none;
    background: none;
    padding: 0;
    color: inherit;
    font-size: inherit;
  }
}

.pt-code {
  @extend %code;
}

.pt-code-block {
  @extend %code-block;
}

/*
Block quotes

Markup:
<blockquote class="pt-blockquote">
  <p>
    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut
    labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco
    laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in
    voluptate velit esse cillum dolore eu fugiat nulla pariatur.
  </p>
</blockquote>
<div class="pt-running-text">
  <blockquote>
    <p>
      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut
      labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco
      laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in
      voluptate velit esse cillum dolore eu fugiat nulla pariatur.
    </p>
  </blockquote>
</div>

Styleguide blockquote
*/

%blockquote {
  margin: 0 0 $pt-grid-size;
  border-left: solid 4px rgba($gray4, 0.5);
  padding: 0 ($pt-grid-size * 2);

  .pt-dark & {
    border-color: rgba($gray2, 0.5);
  }
}

.pt-blockquote {
  @extend %blockquote;
}

/*
Lists

Markup:
<ol class="pt-list">
  <li>Item the first</li>
  <li>Item the second</li>
  <li>
    Item the third
    <ol>
      <li>Item the fourth</li>
      <li>Item the fifth</li>
    </ol>
  </li>
</ol>
<div class="pt-running-text">
  <ul>
  <li>Item the first</li>
  <li>Item the second</li>
  <li>Item the third</li>
  </ul>
</div>

Styleguide lists
*/

%list {
  margin: $pt-grid-size 0;
  padding-left: $pt-grid-size * 4;

  li:not(:last-child) {
    margin-bottom: $pt-grid-size / 2;
  }

  // nested lists
  ol,
  ul {
    margin-top: $pt-grid-size / 2;
  }
}

.pt-list {
  @extend %list;
}

.pt-list-unstyled {
  margin: 0;
  padding: 0;
  list-style: none;

  li {
    padding: 0;
  }
}

/*
Right-to-left text

Markup:
<h4>Arabic:</h4>
<p class="pt-rtl">
  لكل لأداء بمحاولة من. مدينة الواقعة يبق أي, وإعلان وقوعها، حول كل, حدى عجّل مشروط الخاسرة قد.
  من الذود تكبّد بين, و لها واحدة الأراضي. عل الصفحة والروسية يتم, أي للحكومة استعملت شيء. أم وصل زهاء اليا
</p>
<h4>Hebrew:</h4>
<p class="pt-rtl">
  כדי על עזרה יידיש הבהרה, מלא באגים טכניים דת. תנך או ברית ביולי. כתב בה הטבע למנוע, דת כלים פיסיקה החופשית זכר.
  מתן החלל מאמרשיחהצפה ב. הספרות אנציקלופדיה אם זכר, על שימושי שימושיים תאולוגיה עזה
</p>

Styleguide pt-rtl
*/

.pt-rtl {
  text-align: right;
}

.pt-dark {
  color: $pt-dark-text-color;
}
